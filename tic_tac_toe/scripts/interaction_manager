#!/usr/bin/env python
import rospy

from tic_tac_toe.srv import *
from tic_tac_toe import game_agent
from tic_tac_toe import state_estimation

if __name__ == "__main__":
    rospy.init_node("interaction_manager")
    rospy.loginfo("Waiting for topics and services...")
    rospy.wait_for_service('execute_game_action')
    executor = rospy.ServiceProxy('execute_game_action', ExecuteGameAction)
    state_estimator = state_estimation.StateEstimator("game_state")

    rospy.loginfo("Ready")

    while not rospy.is_shutdown():

        # Get game state from vision and detect change
        #state_estimator.state_change_flag.acquire()
        
        # Calculate move
        move = 0
        move = game_agent.getMove((0, 0, 0, 0, 0, 0, 0, 0, 0), 1) # 0=blank, 1=robot, 2=human
        # If game is done, end
        if move == -1:
            pass  # end
        executor(move)
        break
